var v=Object.defineProperty;var R=(s,t,n)=>t in s?v(s,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):s[t]=n;var p=(s,t,n)=>(R(s,typeof t!="symbol"?t+"":t,n),n);import{d as b,a as _,r as h,b as E,e as $,o as f,c as g,f as d,t as l,u as I,g as w,h as k,F as j,i as q}from"./index-c7244eb5.js";const O={baseUrl:"",timeout:5e3},C=s=>{const t=[];return Object.entries(s).forEach(([n,e])=>{const a=encodeURIComponent(n);if(e!=null)switch(typeof e){case"string":case"number":t.push(`${a}=${encodeURIComponent(e)}`);return;case"bigint":t.push(`${a}=${encodeURIComponent(e.toString())}`);return;case"boolean":e===!0&&t.push(a);return;default:throw new TypeError("Invalid query parameter")}}),t.length?`?${t.join("&")}`:""},D=async(s,t={})=>{const n=t.headers||{};t.headers={accept:"application/json",...n};const e=await U(s,t);try{return{data:await e.json(),response:e}}catch(a){throw new m(a,e)}},U=async(s,t={})=>{const{baseUrl:n,headers:e,params:a}={...O,...t};let o;try{const u=t.fetch??fetch,c=a?`${n}${s}${C(a)}`:`${n}${s}`;o=await u(c,{headers:e})}catch(u){throw new m(u,o)}if(!(o!=null&&o.ok))throw new m(new Error("Response not OK"),o);return o};class m extends Error{constructor(n,e){var t=(...args)=>{super(...args);p(this,"error");p(this,"response")};n.name==="TypeError"?(t("Error fetching resource"),this.name="RequestNetworkError"):(t(n.message),this.name="RequestError"),this.error=n,this.response=e}}const y=async(s,t={})=>{const n=await D(s,{baseUrl:"https://environment.data.gov.uk/flood-monitoring",...t});return[n.data.items,n]},S=s=>s.substring(s.lastIndexOf("/")+1),x=async s=>{const[t,n]=await y(`/id/stations/${s}`),e=t,a=S(e["@id"]);return[{...e,id:a},n]},N={limit:1e3},B=async(s,t={})=>{const n={...N,...t},{ascending:e,descending:a,since:o,limit:u}=n,c={since:o,_limit:u};(o||e||a)&&(c._sorted=!0);const[r,i]=await y(`/id/stations/${s}/readings`,{params:c});return[F(r,{ascending:e,descending:a}),i]},F=(s,t={})=>{const n=s,e={};n.forEach(({measure:c,dateTime:r,value:i})=>{e[c]=e[c]||[],e[c].push([new Date(r).valueOf(),i])});const a={};Object.entries(e).forEach(([c,r])=>{const i=S(c);a[i]=r});const{ascending:o,descending:u}=t;if(o||u){const c=o?([r],[i])=>r-i:([r],[i])=>i-r;Object.values(a).forEach(r=>{r.sort(c)})}return a},T=b("station",()=>({getStation:async n=>{const[e,a]=await x(n);return[e,a]},getStationReadings:async(n,e={})=>{const[a,o]=await B(n,e);return[a,o]}})),V={key:0},A={key:1},M=_({__name:"StationPage",setup(s){const t=T(),n=q(),e=h(null),a=h({}),o=E(()=>{const r=n.params.id;return Array.isArray(r)?r[0]:r}),u=h();$(async()=>{const[r,{data:i}]=await t.getStation(o.value);e.value=r,a.value=i});const c=async()=>{const[r]=await t.getStationReadings(o.value,{since:new Date(Date.now()-864e5).toISOString(),ascending:!0});u.value=r};return(r,i)=>(f(),g(j,null,[d("div",null,"Station id "+l(I(o)),1),d("div",null,[d("button",{onClick:c},"Get Readings")]),u.value?(f(),g("div",V,[d("pre",null,l(u.value),1)])):w("",!0),d("pre",null,l(a.value),1),e.value?(f(),g("div",A,[d("h1",null,[k(l(e.value.label)+" ",1),d("small",null,"("+l(e.value.id)+")",1)]),d("pre",null,l(e.value),1)])):w("",!0),d("pre",null,l(a.value),1)],64))}});export{M as default};
